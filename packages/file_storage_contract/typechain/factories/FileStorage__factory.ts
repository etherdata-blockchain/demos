/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FileStorage, FileStorageInterface } from "../FileStorage";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "fileId",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fileOwner",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileCreated",
            type: "uint256",
          },
        ],
        internalType: "struct FileStorage.FileMetaData",
        name: "file",
        type: "tuple",
      },
    ],
    name: "addFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "deleteFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFileSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getFilesInRange",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "fileId",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fileOwner",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileCreated",
            type: "uint256",
          },
        ],
        internalType: "struct FileStorage.FileMetaData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611246806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631322f7fa146100515780632108f9e31461006f57806377af74781461009f578063c5b42006146100bb575b600080fd5b6100596100d7565b6040516100669190610ac5565b60405180910390f35b61008960048036038101906100849190610b20565b610120565b6040516100969190610d68565b60405180910390f35b6100b960048036038101906100b49190610fd9565b61053f565b005b6100d560048036038101906100d09190611022565b610634565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b606060008290506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508111156101b5576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090505b600084826101c3919061107e565b905060008167ffffffffffffffff8111156101e1576101e0610d8f565b5b60405190808252806020026020018201604052801561021a57816020015b610207610906565b8152602001906001900390816101ff5790505b5090506000808790505b83821015610531576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061027c5761027b6110b2565b5b90600052602060002090600602016040518060c00160405290816000820180546102a590611110565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190611110565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050815260200160018201805461033790611110565b80601f016020809104026020016040519081016040528092919081815260200182805461036390611110565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b505050505081526020016002820180546103c990611110565b80601f01602080910402602001604051908101604052809291908181526020018280546103f590611110565b80156104425780601f1061041757610100808354040283529160200191610442565b820191906000526020600020905b81548152906001019060200180831161042557829003601f168201915b505050505081526020016003820154815260200160048201805461046590611110565b80601f016020809104026020016040519081016040528092919081815260200182805461049190611110565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b50505050508152602001600582015481525050838381518110610504576105036110b2565b5b602002602001018190525060018261051c9190611142565b9150808061052990611198565b915050610224565b508194505050505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000190805190602001906105c392919061093c565b5060208201518160010190805190602001906105e092919061093c565b5060408201518160020190805190602001906105fd92919061093c565b5060608201518160030155608082015181600401908051906020019061062492919061093c565b5060a08201518160050155505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156109035760008190505b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506106d1919061107e565b81101561084a576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826107239190611142565b81548110610734576107336110b2565b5b90600052602060002090600602016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610792576107916110b2565b5b906000526020600020906006020160008201816000019080546107b490611110565b6107bf9291906109c2565b5060018201816001019080546107d490611110565b6107df9291906109c2565b5060028201816002019080546107f490611110565b6107ff9291906109c2565b5060038201548160030155600482018160040190805461081e90611110565b6108299291906109c2565b5060058201548160050155905050808061084290611198565b915050610683565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610899576108986111e1565b5b6001900381819060005260206000209060060201600080820160006108be9190610a4f565b6001820160006108ce9190610a4f565b6002820160006108de9190610a4f565b60038201600090556004820160006108f69190610a4f565b6005820160009055505090555b50565b6040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001600081525090565b82805461094890611110565b90600052602060002090601f01602090048101928261096a57600085556109b1565b82601f1061098357805160ff19168380011785556109b1565b828001600101855582156109b1579182015b828111156109b0578251825591602001919060010190610995565b5b5090506109be9190610a8f565b5090565b8280546109ce90611110565b90600052602060002090601f0160209004810192826109f05760008555610a3e565b82601f10610a015780548555610a3e565b82800160010185558215610a3e57600052602060002091601f016020900482015b82811115610a3d578254825591600101919060010190610a22565b5b509050610a4b9190610a8f565b5090565b508054610a5b90611110565b6000825580601f10610a6d5750610a8c565b601f016020900490600052602060002090810190610a8b9190610a8f565b5b50565b5b80821115610aa8576000816000905550600101610a90565b5090565b6000819050919050565b610abf81610aac565b82525050565b6000602082019050610ada6000830184610ab6565b92915050565b6000604051905090565b600080fd5b600080fd5b610afd81610aac565b8114610b0857600080fd5b50565b600081359050610b1a81610af4565b92915050565b60008060408385031215610b3757610b36610aea565b5b6000610b4585828601610b0b565b9250506020610b5685828601610b0b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bc6578082015181840152602081019050610bab565b83811115610bd5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610bf782610b8c565b610c018185610b97565b9350610c11818560208601610ba8565b610c1a81610bdb565b840191505092915050565b610c2e81610aac565b82525050565b600060c0830160008301518482036000860152610c518282610bec565b91505060208301518482036020860152610c6b8282610bec565b91505060408301518482036040860152610c858282610bec565b9150506060830151610c9a6060860182610c25565b5060808301518482036080860152610cb28282610bec565b91505060a0830151610cc760a0860182610c25565b508091505092915050565b6000610cde8383610c34565b905092915050565b6000602082019050919050565b6000610cfe82610b60565b610d088185610b6b565b935083602082028501610d1a85610b7c565b8060005b85811015610d565784840389528151610d378582610cd2565b9450610d4283610ce6565b925060208a01995050600181019050610d1e565b50829750879550505050505092915050565b60006020820190508181036000830152610d828184610cf3565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dc782610bdb565b810181811067ffffffffffffffff82111715610de657610de5610d8f565b5b80604052505050565b6000610df9610ae0565b9050610e058282610dbe565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610e3457610e33610d8f565b5b610e3d82610bdb565b9050602081019050919050565b82818337600083830152505050565b6000610e6c610e6784610e19565b610def565b905082815260208101848484011115610e8857610e87610e14565b5b610e93848285610e4a565b509392505050565b600082601f830112610eb057610eaf610e0f565b5b8135610ec0848260208601610e59565b91505092915050565b600060c08284031215610edf57610ede610d8a565b5b610ee960c0610def565b9050600082013567ffffffffffffffff811115610f0957610f08610e0a565b5b610f1584828501610e9b565b600083015250602082013567ffffffffffffffff811115610f3957610f38610e0a565b5b610f4584828501610e9b565b602083015250604082013567ffffffffffffffff811115610f6957610f68610e0a565b5b610f7584828501610e9b565b6040830152506060610f8984828501610b0b565b606083015250608082013567ffffffffffffffff811115610fad57610fac610e0a565b5b610fb984828501610e9b565b60808301525060a0610fcd84828501610b0b565b60a08301525092915050565b600060208284031215610fef57610fee610aea565b5b600082013567ffffffffffffffff81111561100d5761100c610aef565b5b61101984828501610ec9565b91505092915050565b60006020828403121561103857611037610aea565b5b600061104684828501610b0b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061108982610aac565b915061109483610aac565b9250828210156110a7576110a661104f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061112857607f821691505b6020821081141561113c5761113b6110e1565b5b50919050565b600061114d82610aac565b915061115883610aac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561118d5761118c61104f565b5b828201905092915050565b60006111a382610aac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111d6576111d561104f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201d35f8afba65a8a608170e9f9fee311379a120689216dd6d10774a67a0bad56a64736f6c63430008090033";

export class FileStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FileStorage> {
    return super.deploy(overrides || {}) as Promise<FileStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FileStorage {
    return super.attach(address) as FileStorage;
  }
  connect(signer: Signer): FileStorage__factory {
    return super.connect(signer) as FileStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileStorageInterface {
    return new utils.Interface(_abi) as FileStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileStorage {
    return new Contract(address, _abi, signerOrProvider) as FileStorage;
  }
}
